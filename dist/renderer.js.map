{"version":3,"file":"renderer.js","sources":["../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/defaults.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/helpers.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/Tokenizer.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/rules.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/Lexer.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/Renderer.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/TextRenderer.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/Slugger.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/Parser.js","../node_modules/.pnpm/marked@2.1.3/node_modules/marked/src/marked.js","../node_modules/.pnpm/dompurify@2.3.0/node_modules/dompurify/src/utils.js","../src/utils/event-loop-yielder.ts","../src/highlighter.ts","../src/renderer.ts"],"sourcesContent":["function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation,\n  repeatString\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  rtrim,\n  splitCells,\n  escape,\n  findClosingBracket\n} = require('./helpers.js');\n\nfunction outputLink(cap, link, raw) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    return {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text\n    };\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nmodule.exports = class Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text\n      };\n    }\n  }\n\n  nptable(src) {\n    const cap = this.rules.block.nptable.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n        raw: cap[0]\n      };\n\n      if (item.header.length === item.align.length) {\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  list(src) {\n    const cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw = cap[0];\n      const bull = cap[2];\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw,\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      // Get each top-level item.\n      const itemMatch = cap[0].match(this.rules.block.item);\n\n      let next = false,\n        item,\n        space,\n        bcurr,\n        bnext,\n        addBack,\n        loose,\n        istask,\n        ischecked,\n        endMatch;\n\n      let l = itemMatch.length;\n      bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n      for (let i = 0; i < l; i++) {\n        item = itemMatch[i];\n        raw = item;\n\n        if (!this.options.pedantic) {\n          // Determine if current item contains the end of the list\n          endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n          if (endMatch) {\n            addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n            list.raw = list.raw.substring(0, list.raw.length - addBack);\n\n            item = item.substring(0, endMatch.index);\n            raw = item;\n            l = i + 1;\n          }\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n          if (\n            !this.options.pedantic\n              ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3\n              : bnext[1].length > bcurr[1].length\n          ) {\n            // nested list or continuation\n            itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n            i--;\n            l--;\n            continue;\n          } else if (\n            // different bullet style\n            !this.options.pedantic || this.options.smartLists\n              ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1]\n              : isordered === (bnext[2].length === 1)\n          ) {\n            addBack = itemMatch.slice(i + 1).join('\\n').length;\n            list.raw = list.raw.substring(0, list.raw.length - addBack);\n            i = l - 1;\n          }\n          bcurr = bnext;\n        }\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // trim item newlines at end\n        item = rtrim(item, '\\n');\n        if (i !== l - 1) {\n          raw = raw + '\\n';\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n        if (i !== l - 1) {\n          next = raw.slice(-2) === '\\n\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          list.loose = true;\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: istask,\n          checked: ischecked,\n          loose: loose,\n          text: item\n        });\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      return {\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      };\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0]\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src, inLink, inRawBlock) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!inLink && /^<a /i.test(cap[0])) {\n        inLink = true;\n      } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n        inLink = false;\n      }\n      if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = true;\n      } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink,\n        inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0]);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0]);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: src.slice(1, lLength + match.index + rLength)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text: src.slice(2, lLength + match.index + rLength - 1)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2]\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, inRawBlock, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //        () Skip other delimiter (1) #***                   (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /\\_\\_[^_*]*?\\*[^_*]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /\\*\\*[^_*]*?\\_[^_*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Tokenizer = require('./Tokenizer.js');\nconst { defaults } = require('./defaults.js');\nconst { block, inline } = require('./rules.js');\nconst { repeatString } = require('./helpers.js');\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens, true);\n\n    this.inline(this.tokens);\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = [], top = true) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, i, l, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call(this, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (token = this.tokenizer.nptable(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.blockTokens(token.text, [], top);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        l = token.items.length;\n        for (i = 0; i < l; i++) {\n          token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (top && (token = this.tokenizer.def(src))) {\n        src = src.substring(token.raw.length);\n        if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call(this, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  inline(tokens) {\n    let i,\n      j,\n      k,\n      l2,\n      row,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'paragraph':\n        case 'text':\n        case 'heading': {\n          token.tokens = [];\n          this.inlineTokens(token.text, token.tokens);\n          break;\n        }\n        case 'table': {\n          token.tokens = {\n            header: [],\n            cells: []\n          };\n\n          // header\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            token.tokens.header[j] = [];\n            this.inlineTokens(token.header[j], token.tokens.header[j]);\n          }\n\n          // cells\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.cells[j];\n            token.tokens.cells[j] = [];\n            for (k = 0; k < row.length; k++) {\n              token.tokens.cells[j][k] = [];\n              this.inlineTokens(row[k], token.tokens.cells[j][k]);\n            }\n          }\n\n          break;\n        }\n        case 'blockquote': {\n          this.inline(token.tokens);\n          break;\n        }\n        case 'list': {\n          l2 = token.items.length;\n          for (j = 0; j < l2; j++) {\n            this.inline(token.items[j].tokens);\n          }\n          break;\n        }\n        default: {\n          // do nothing\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = [], inLink = false, inRawBlock = false) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call(this, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n        src = src.substring(token.raw.length);\n        inLink = token.inLink;\n        inRawBlock = token.inRawBlock;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          tokens.push(token);\n        } else if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call(this, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, inRawBlock, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n};\n","const Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call(this, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.tokens.header[j]),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.tokens.cells[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k]),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call(this, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = (token) => {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback(token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.tokens.header) {\n          marked.walkTokens(cell, callback);\n        }\n        for (const row of token.tokens.cells) {\n          for (const cell of row) {\n            marked.walkTokens(cell, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","/**\n * A helper to allow the JavaScript event loop continue for a given interval between each\n * iteration of a CPU intensive loop. If the time spent in the loop reaches the given\n * maxTime, the operation is killed.\n *\n * @returns An async function to call inside your heavy loop. It will return `false` if\n *     the operation has exceeded the given max time (`true` otherwise).\n */\nexport function eventLoopYielder(delayMs: number, maxTimeMs: number) {\n  const started = performance.now()\n  let lastYield = started\n  return async function (): Promise<boolean> {\n    const now = performance.now()\n    if (now - lastYield > delayMs) {\n      await new Promise(setImmediate)\n      lastYield = now\n    }\n    return now - started <= maxTimeMs\n  }\n}\n\n/** Throws maximum time reached error */\nexport function maxTimeError(name: string, timeS: number) {\n  const err = new Error(\"Max time reached\")\n  atom.notifications.addError(`${name} took more than ${timeS} seconds to complete`, {\n    dismissable: true,\n    description: `${name} took too long to complete and was terminated.`,\n    stack: err.stack,\n  })\n  return err\n}\n","import { TextBuffer, LanguageMode } from \"atom\"\nimport { eventLoopYielder, maxTimeError } from \"./utils/event-loop-yielder\"\n\ndeclare module \"atom\" {\n  interface GrammarRegistry {\n    grammarForId(id: string): Grammar\n    languageModeForGrammarAndBuffer(g: Grammar, b: TextBuffer): LanguageMode\n  }\n  interface LanguageMode {\n    readonly fullyTokenized?: boolean\n    readonly tree?: boolean\n    onDidTokenize(cb: () => void): Disposable\n    buildHighlightIterator(): HighlightIterator\n    classNameForScopeId(id: ScopeId): string\n    startTokenizing?(): void\n  }\n  interface HighlightIterator {\n    seek(pos: { row: number; column: number }): void\n    getPosition(): { row: number; column: number }\n    getOpenScopeIds?(): ScopeId[]\n    getCloseScopeIds?(): ScopeId[]\n    moveToSuccessor(): void\n  }\n  interface ScopeId {}\n}\n\nexport async function highlightTreeSitter(sourceCode: string, scopeName: string) {\n  const yielder = eventLoopYielder(100, 5000)\n  const buf = new TextBuffer()\n  try {\n    const grammar = atom.grammars.grammarForId(scopeName)\n    const lm = atom.grammars.languageModeForGrammarAndBuffer(grammar, buf)\n    buf.setLanguageMode(lm)\n    buf.setText(sourceCode)\n    const end = buf.getEndPosition()\n    if (lm.startTokenizing) lm.startTokenizing()\n    await tokenized(lm)\n    const iter = lm.buildHighlightIterator()\n    if (iter.getOpenScopeIds && iter.getCloseScopeIds) {\n      let pos = { row: 0, column: 0 }\n      iter.seek(pos)\n      const res = []\n      while (pos.row < end.row || (pos.row === end.row && pos.column <= end.column)) {\n        res.push(\n          ...iter.getCloseScopeIds().map(() => \"</span>\"),\n          ...iter.getOpenScopeIds().map((x) => `<span class=\"${lm.classNameForScopeId(x)}\">`)\n        )\n        iter.moveToSuccessor()\n        const nextPos = iter.getPosition()\n        res.push(escapeHTML(buf.getTextInRange([pos, nextPos])))\n\n        if (!(await yielder())) {\n          console.error(maxTimeError(\"Atom-IDE-Markdown-Service: Highlighter\", 5))\n          break\n        }\n        pos = nextPos\n      }\n      return res.join(\"\")\n    } else {\n      return sourceCode\n    }\n  } finally {\n    buf.destroy()\n  }\n}\n\nasync function tokenized(lm: LanguageMode) {\n  return new Promise((resolve) => {\n    if (lm.fullyTokenized || lm.tree) {\n      resolve(undefined)\n    } else if (lm.onDidTokenize) {\n      const disp = lm.onDidTokenize(() => {\n        disp.dispose()\n        resolve(undefined)\n      })\n    } else {\n      resolve(undefined) // null language mode\n    }\n  })\n}\n\nfunction escapeHTML(str: string) {\n  return str\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\")\n}\n","import marked from \"marked\"\n\n/**\n * safe DOM markup operations\n * a reference to the DOMpurify function to make safe HTML strings\n * @type {DOMPurify}\n */\nimport DOMPurify from \"dompurify\"\nimport { highlightTreeSitter } from \"./highlighter\"\n\nmarked.setOptions({\n  breaks: true,\n})\n\nexport type DOMPurifyConfig = Omit<DOMPurify.Config, \"RETURN_DOM\" | \"RETURN_DOM_FRAGMENT\" | \"RETURN_TRUSTED_TYPE\">\n\n/**\n * renders markdown to safe HTML asynchronously\n * @param markdownText the markdown text to render\n * @param scopeName scope name used for highlighting the code\n * @param purifyConfig (optional) configuration object for DOMPurify\n * @return the html string containing the result\n */\nexport async function render(\n  markdownText: string,\n  scopeName: string = \"text.plain\",\n  domPurifyConfig?: DOMPurifyConfig\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    marked(\n      markdownText,\n      {\n        highlight: function (code, _lang, callback) {\n          highlightTreeSitter(code, scopeName)\n            .then((codeResult) => {\n              callback!(null, codeResult)\n            })\n            .catch((e) => {\n              callback!(e)\n            })\n        },\n      },\n      (e, html) => {\n        if (e) {\n          reject(e)\n        }\n        // sanitization\n        html = domPurifyConfig ? DOMPurify.sanitize(html, domPurifyConfig) : DOMPurify.sanitize(html)\n\n        return resolve(html)\n      }\n    )\n  })\n}\n"],"names":["getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","module","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","href","test","rtrim","relativeBase","indexOf","str","c","invert","l","length","suffLen","currChar","substr","escape","encode","edit","regex","opt","source","obj","name","val","getRegex","RegExp","cleanUrl","prot","decodeURIComponent","e","encodeURI","noopTest","exec","merge","target","key","i","arguments","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","escaped","curr","split","splice","push","trim","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","require","outputLink","cap","link","raw","title","text","type","constructor","options","space","src","this","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","slice","join","indentCodeCompensation","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","bcurr","bnext","addBack","istask","ischecked","endMatch","next","listItemStart","index","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","Math","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","toString","Lexer","create","Tokenizer","lex","inlineTokens","blockTokens","top","token","lastToken","cutSrc","lastParagraphClipped","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","j","k","l2","row","keepPrevChar","keys","includes","lastIndexOf","startInline","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","Renderer","textRenderer","TextRenderer","Slugger","parse","parseInline","l3","cell","itemBody","ret","renderers","unshift","marked","callback","done","err","pending","setTimeout","message","setOptions","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","lexInline","parser","lexer","isFrozen","fun","freeze","seal","construct","TypeError","Array","_len2","_key2","array","maxTimeError","timeS","atom","notifications","addError","dismissable","description","stack","async","highlightTreeSitter","sourceCode","scopeName","yielder","delayMs","maxTimeMs","started","performance","now","lastYield","Promise","setImmediate","eventLoopYielder","buf","TextBuffer","grammar","grammars","grammarForId","lm","languageModeForGrammarAndBuffer","setLanguageMode","setText","end","getEndPosition","startTokenizing","resolve","fullyTokenized","tree","onDidTokenize","disp","dispose","tokenized","iter","buildHighlightIterator","getOpenScopeIds","getCloseScopeIds","pos","column","seek","res","x","classNameForScopeId","moveToSuccessor","nextPos","getPosition","getTextInRange","destroy","markdownText","domPurifyConfig","reject","_lang","then","codeResult","catch","DOMPurify"],"mappings":"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"}