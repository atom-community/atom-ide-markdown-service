{"version":3,"file":"main.js","sources":["../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/defaults.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/helpers.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/Tokenizer.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/rules.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/Lexer.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/Renderer.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/TextRenderer.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/Slugger.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/Parser.js","../node_modules/.pnpm/marked@1.2.9/node_modules/marked/src/marked.js","../node_modules/.pnpm/dompurify@2.2.6/node_modules/dompurify/src/utils.js","../src/utils/event-loop-yielder.ts","../src/highlighter.ts","../src/renderer.ts","../src/main.ts"],"sourcesContent":["function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation,\n  repeatString\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  rtrim,\n  splitCells,\n  escape,\n  findClosingBracket\n} = require('./helpers.js');\n\nfunction outputLink(cap, link, raw) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    return {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text\n    };\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nmodule.exports = class Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src, tokens) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        return {\n          raw: cap[0],\n          text: cap[0].trimRight()\n        };\n      }\n\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text\n      };\n    }\n  }\n\n  nptable(src) {\n    const cap = this.rules.block.nptable.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n        raw: cap[0]\n      };\n\n      if (item.header.length === item.align.length) {\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  list(src) {\n    const cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw = cap[0];\n      const bull = cap[2];\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw,\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      // Get each top-level item.\n      const itemMatch = cap[0].match(this.rules.block.item);\n\n      let next = false,\n        item,\n        space,\n        bcurr,\n        bnext,\n        addBack,\n        loose,\n        istask,\n        ischecked;\n\n      let l = itemMatch.length;\n      bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n      for (let i = 0; i < l; i++) {\n        item = itemMatch[i];\n        raw = item;\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n          if (\n            !this.options.pedantic\n              ? bnext[1].length > bcurr[0].length || bnext[1].length > 3\n              : bnext[1].length > bcurr[1].length\n          ) {\n            // nested list\n            itemMatch.splice(i, 2, itemMatch[i] + '\\n' + itemMatch[i + 1]);\n            i--;\n            l--;\n            continue;\n          } else {\n            if (\n              // different bullet style\n              !this.options.pedantic || this.options.smartLists\n                ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1]\n                : isordered === (bnext[2].length === 1)\n            ) {\n              addBack = itemMatch.slice(i + 1).join('\\n');\n              list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n              i = l - 1;\n            }\n          }\n          bcurr = bnext;\n        }\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          list.loose = true;\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: istask,\n          checked: ischecked,\n          loose: loose,\n          text: item\n        });\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      return {\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      };\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      };\n    }\n  }\n\n  text(src, tokens) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      if (lastToken && lastToken.type === 'text') {\n        return {\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0]\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src, inLink, inRawBlock) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!inLink && /^<a /i.test(cap[0])) {\n        inLink = true;\n      } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n        inLink = false;\n      }\n      if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = true;\n      } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink,\n        inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0]);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0]);\n    }\n  }\n\n  strong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.strong.start.exec(src);\n\n    if (match && (!match[1] || (match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))))) {\n      maskedSrc = maskedSrc.slice(-1 * src.length);\n      const endReg = match[0] === '**' ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;\n\n      endReg.lastIndex = 0;\n\n      let cap;\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        cap = this.rules.inline.strong.middle.exec(maskedSrc.slice(0, match.index + 3));\n        if (cap) {\n          return {\n            type: 'strong',\n            raw: src.slice(0, cap[0].length),\n            text: src.slice(2, cap[0].length - 2)\n          };\n        }\n      }\n    }\n  }\n\n  em(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.em.start.exec(src);\n\n    if (match && (!match[1] || (match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))))) {\n      maskedSrc = maskedSrc.slice(-1 * src.length);\n      const endReg = match[0] === '*' ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;\n\n      endReg.lastIndex = 0;\n\n      let cap;\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        cap = this.rules.inline.em.middle.exec(maskedSrc.slice(0, match.index + 2));\n        if (cap) {\n          return {\n            type: 'em',\n            raw: src.slice(0, cap[0].length),\n            text: src.slice(1, cap[0].length - 1)\n          };\n        }\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2]\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, inRawBlock, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.listItemStart = edit(/^( *)(bull)/)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  strong: {\n    start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/, // (1) returns if starts w/ punctuation\n    middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,\n    endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)\n    endUnd: /[^\\s]__(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n  },\n  em: {\n    start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/, // (1) returns if starts w/ punctuation\n    middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,\n    endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)\n    endUnd: /[^\\s]_(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\s*punctuation])/\n};\n\n// list of punctuation marks from common mark spec\n// without * and _ to workaround cases with double emphasis\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';\ninline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.em.start = edit(inline.em.start)\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.em.middle = edit(inline.em.middle)\n  .replace(/punctuation/g, inline._punctuation)\n  .replace(/overlapSkip/g, inline._overlapSkip)\n  .getRegex();\n\ninline.em.endAst = edit(inline.em.endAst, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.em.endUnd = edit(inline.em.endUnd, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.start = edit(inline.strong.start)\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.middle = edit(inline.strong.middle)\n  .replace(/punctuation/g, inline._punctuation)\n  .replace(/overlapSkip/g, inline._overlapSkip)\n  .getRegex();\n\ninline.strong.endAst = edit(inline.strong.endAst, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.endUnd = edit(inline.strong.endUnd, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.blockSkip = edit(inline._blockSkip, 'g')\n  .getRegex();\n\ninline.overlapSkip = edit(inline._overlapSkip, 'g')\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Tokenizer = require('./Tokenizer.js');\nconst { defaults } = require('./defaults.js');\nconst { block, inline } = require('./rules.js');\nconst { repeatString } = require('./helpers.js');\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens, true);\n\n    this.inline(this.tokens);\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = [], top = true) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, i, l, lastToken;\n\n    while (src) {\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src, tokens)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        } else {\n          lastToken = tokens[tokens.length - 1];\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (token = this.tokenizer.nptable(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.blockTokens(token.text, [], top);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        l = token.items.length;\n        for (i = 0; i < l; i++) {\n          token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (top && (token = this.tokenizer.def(src))) {\n        src = src.substring(token.raw.length);\n        if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (token = this.tokenizer.paragraph(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src, tokens)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        } else {\n          lastToken = tokens[tokens.length - 1];\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  inline(tokens) {\n    let i,\n      j,\n      k,\n      l2,\n      row,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'paragraph':\n        case 'text':\n        case 'heading': {\n          token.tokens = [];\n          this.inlineTokens(token.text, token.tokens);\n          break;\n        }\n        case 'table': {\n          token.tokens = {\n            header: [],\n            cells: []\n          };\n\n          // header\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            token.tokens.header[j] = [];\n            this.inlineTokens(token.header[j], token.tokens.header[j]);\n          }\n\n          // cells\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.cells[j];\n            token.tokens.cells[j] = [];\n            for (k = 0; k < row.length; k++) {\n              token.tokens.cells[j][k] = [];\n              this.inlineTokens(row[k], token.tokens.cells[j][k]);\n            }\n          }\n\n          break;\n        }\n        case 'blockquote': {\n          this.inline(token.tokens);\n          break;\n        }\n        case 'list': {\n          l2 = token.items.length;\n          for (j = 0; j < l2; j++) {\n            this.inline(token.items[j].tokens);\n          }\n          break;\n        }\n        default: {\n          // do nothing\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = [], inLink = false, inRawBlock = false) {\n    let token;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n        src = src.substring(token.raw.length);\n        inLink = token.inLink;\n        inRawBlock = token.inRawBlock;\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // strong\n      if (token = this.tokenizer.strong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // em\n      if (token = this.tokenizer.em(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n        src = src.substring(token.raw.length);\n        prevChar = token.raw.slice(-1);\n        keepPrevChar = true;\n        tokens.push(token);\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n};\n","const Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.tokens.header[j]),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.tokens.cells[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k]),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(extension) {\n  const opts = merge({}, extension);\n  if (extension.renderer) {\n    const renderer = marked.defaults.renderer || new Renderer();\n    for (const prop in extension.renderer) {\n      const prevRenderer = renderer[prop];\n      renderer[prop] = (...args) => {\n        let ret = extension.renderer[prop].apply(renderer, args);\n        if (ret === false) {\n          ret = prevRenderer.apply(renderer, args);\n        }\n        return ret;\n      };\n    }\n    opts.renderer = renderer;\n  }\n  if (extension.tokenizer) {\n    const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n    for (const prop in extension.tokenizer) {\n      const prevTokenizer = tokenizer[prop];\n      tokenizer[prop] = (...args) => {\n        let ret = extension.tokenizer[prop].apply(tokenizer, args);\n        if (ret === false) {\n          ret = prevTokenizer.apply(tokenizer, args);\n        }\n        return ret;\n      };\n    }\n    opts.tokenizer = tokenizer;\n  }\n  if (extension.walkTokens) {\n    const walkTokens = marked.defaults.walkTokens;\n    opts.walkTokens = (token) => {\n      extension.walkTokens(token);\n      if (walkTokens) {\n        walkTokens(token);\n      }\n    };\n  }\n  marked.setOptions(opts);\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback(token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.tokens.header) {\n          marked.walkTokens(cell, callback);\n        }\n        for (const row of token.tokens.cells) {\n          for (const cell of row) {\n            marked.walkTokens(cell, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  return null;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","/**\r\n * A helper to allow the JavaScript event loop continue for a given interval between each\r\n * iteration of a CPU intensive loop. If the time spent in the loop reaches the given\r\n * maxTime, the operation is killed.\r\n *\r\n * @returns An async function to call inside your heavy loop. It will return `false` if\r\n *     the operation has exceeded the given max time (`true` otherwise).\r\n */\r\nexport function eventLoopYielder(delayMs: number, maxTimeMs: number) {\r\n  const started = performance.now()\r\n  let lastYield = started\r\n  return async function (): Promise<boolean> {\r\n    const now = performance.now()\r\n    if (now - lastYield > delayMs) {\r\n      await new Promise(setImmediate)\r\n      lastYield = now\r\n    }\r\n    return now - started <= maxTimeMs\r\n  }\r\n}\r\n\r\n/** Throws maximum time reached error */\r\nexport function maxTimeError(name: string, timeS: number) {\r\n  const err = new Error(\"Max time reached\")\r\n  atom.notifications.addError(`${name} took more than ${timeS} seconds to complete`, {\r\n    dismissable: true,\r\n    description: `${name} took too long to complete and was terminated.`,\r\n    stack: err.stack,\r\n  })\r\n  return err\r\n}\r\n","import { TextBuffer, LanguageMode } from \"atom\"\r\nimport { eventLoopYielder, maxTimeError } from \"./utils/event-loop-yielder\"\r\n\r\ndeclare module \"atom\" {\r\n  interface GrammarRegistry {\r\n    grammarForId(id: string): Grammar\r\n    languageModeForGrammarAndBuffer(g: Grammar, b: TextBuffer): LanguageMode\r\n  }\r\n  interface LanguageMode {\r\n    readonly fullyTokenized?: boolean\r\n    readonly tree?: boolean\r\n    onDidTokenize(cb: () => void): Disposable\r\n    buildHighlightIterator(): HighlightIterator\r\n    classNameForScopeId(id: ScopeId): string\r\n    startTokenizing?(): void\r\n  }\r\n  interface HighlightIterator {\r\n    seek(pos: { row: number; column: number }): void\r\n    getPosition(): { row: number; column: number }\r\n    getOpenScopeIds?(): ScopeId[]\r\n    getCloseScopeIds?(): ScopeId[]\r\n    moveToSuccessor(): void\r\n  }\r\n  interface ScopeId {}\r\n}\r\n\r\nexport async function highlightTreeSitter(sourceCode: string, scopeName: string) {\r\n  const yielder = eventLoopYielder(100, 5000)\r\n  const buf = new TextBuffer()\r\n  try {\r\n    const grammar = atom.grammars.grammarForId(scopeName)\r\n    const lm = atom.grammars.languageModeForGrammarAndBuffer(grammar, buf)\r\n    buf.setLanguageMode(lm)\r\n    buf.setText(sourceCode)\r\n    const end = buf.getEndPosition()\r\n    if (lm.startTokenizing) lm.startTokenizing()\r\n    await tokenized(lm)\r\n    const iter = lm.buildHighlightIterator()\r\n    if (iter.getOpenScopeIds && iter.getCloseScopeIds) {\r\n      let pos = { row: 0, column: 0 }\r\n      iter.seek(pos)\r\n      const res = []\r\n      while (pos.row < end.row || (pos.row === end.row && pos.column <= end.column)) {\r\n        res.push(\r\n          ...iter.getCloseScopeIds().map(() => \"</span>\"),\r\n          ...iter.getOpenScopeIds().map((x) => `<span class=\"${lm.classNameForScopeId(x)}\">`)\r\n        )\r\n        iter.moveToSuccessor()\r\n        const nextPos = iter.getPosition()\r\n        res.push(escapeHTML(buf.getTextInRange([pos, nextPos])))\r\n\r\n        if (!(await yielder())) {\r\n          console.error(maxTimeError(\"Atom-IDE-Markdown-Service: Highlighter\", 5))\r\n          break\r\n        }\r\n        pos = nextPos\r\n      }\r\n      return res.join(\"\")\r\n    } else {\r\n      return sourceCode\r\n    }\r\n  } finally {\r\n    buf.destroy()\r\n  }\r\n}\r\n\r\nasync function tokenized(lm: LanguageMode) {\r\n  return new Promise((resolve) => {\r\n    if (lm.fullyTokenized || lm.tree) {\r\n      resolve(undefined)\r\n    } else if (lm.onDidTokenize) {\r\n      const disp = lm.onDidTokenize(() => {\r\n        disp.dispose()\r\n        resolve(undefined)\r\n      })\r\n    } else {\r\n      resolve(undefined) // null language mode\r\n    }\r\n  })\r\n}\r\n\r\nfunction escapeHTML(str: string) {\r\n  return str\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\")\r\n    .replace(/'/g, \"&#039;\")\r\n}\r\n","import marked from \"marked\"\r\n\r\n/**\r\n * safe DOM markup operations\r\n * a reference to the DOMpurify function to make safe HTML strings\r\n * @type {DOMPurify}\r\n */\r\nimport DOMPurify from \"dompurify\"\r\nimport { highlightTreeSitter } from \"./highlighter\"\r\n\r\nmarked.setOptions({\r\n  breaks: true,\r\n})\r\n\r\nexport type DOMPurifyConfig = Omit<DOMPurify.Config, \"RETURN_DOM\" | \"RETURN_DOM_FRAGMENT\" | \"RETURN_TRUSTED_TYPE\">\r\n\r\n/**\r\n * renders markdown to safe HTML asynchronously\r\n * @param markdownText the markdown text to render\r\n * @param scopeName scope name used for highlighting the code\r\n * @param purifyConfig (optional) configuration object for DOMPurify\r\n * @return the html string containing the result\r\n */\r\nexport async function render(\r\n  markdownText: string,\r\n  scopeName: string = \"text.plain\",\r\n  domPurifyConfig?: DOMPurifyConfig\r\n): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    marked(\r\n      markdownText,\r\n      {\r\n        highlight: function (code, _lang, callback) {\r\n          highlightTreeSitter(code, scopeName)\r\n            .then((codeResult) => {\r\n              callback!(null, codeResult)\r\n            })\r\n            .catch((e) => {\r\n              callback!(e)\r\n            })\r\n        },\r\n      },\r\n      (e, html) => {\r\n        if (e) {\r\n          reject(e)\r\n        }\r\n        // sanitization\r\n        html = domPurifyConfig ? DOMPurify.sanitize(html, domPurifyConfig) : DOMPurify.sanitize(html)\r\n\r\n        return resolve(html)\r\n      }\r\n    )\r\n  })\r\n}\r\n","import { CompositeDisposable } from \"atom\"\r\nimport { render } from \"./renderer\"\r\nimport type { MarkdownService } from \"atom-ide-base\"\r\n\r\n/**\r\n * [subscriptions description]\r\n */\r\nlet subscriptions: CompositeDisposable | null\r\n\r\n/**\r\n * called by Atom when activating an extension\r\n */\r\nexport function activate() {\r\n  // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\r\n  subscriptions = new CompositeDisposable()\r\n}\r\n\r\n/**\r\n * called by Atom when deactivating an extension\r\n */\r\nexport function deactivate() {\r\n  if (subscriptions) {\r\n    subscriptions.dispose()\r\n  }\r\n  subscriptions = null\r\n}\r\n\r\n/**\r\n * provide an interface to the Markdown renderer service\r\n * @return {MarkdownService} the markdown renderer service\r\n */\r\nexport function provideMarkdownRenderer(): MarkdownService {\r\n  return { render }\r\n}\r\n"],"names":["getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","module","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","href","test","rtrim","relativeBase","indexOf","str","c","invert","l","length","suffLen","currChar","substr","escape","encode","edit","regex","opt","source","obj","name","val","getRegex","RegExp","cleanUrl","prot","decodeURIComponent","e","encodeURI","noopTest","exec","merge","target","key","i","arguments","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","escaped","curr","split","splice","push","trim","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","require","outputLink","cap","link","raw","title","text","type","constructor","options","space","src","this","rules","block","newline","code","tokens","lastToken","trimRight","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","slice","join","indentCodeCompensation","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","ordered","start","loose","items","itemMatch","bcurr","bnext","addBack","istask","ischecked","next","listItemStart","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","strong","maskedSrc","prevChar","punctuation","endReg","endAst","endUnd","lastIndex","middle","index","em","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","_tag","_comment","normal","reflinkSearch","_punctuation","_blockSkip","_overlapSkip","blockSkip","overlapSkip","_scheme","_email","_attribute","_href","_extended_email","out","charCodeAt","Math","random","toString","Lexer","create","Tokenizer","lex","inlineTokens","blockTokens","top","token","errMsg","error","Error","j","k","l2","row","keepPrevChar","keys","includes","lastIndexOf","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","Renderer","textRenderer","TextRenderer","Slugger","parse","parseInline","l3","cell","itemBody","unshift","marked","callback","done","err","pending","setTimeout","message","setOptions","use","extension","opts","prop","prevRenderer","args","ret","apply","prevTokenizer","lexInline","parser","lexer","isFrozen","fun","freeze","seal","construct","forEach","TypeError","Array","_len2","_key2","array","maxTimeError","timeS","atom","notifications","addError","dismissable","description","stack","async","highlightTreeSitter","sourceCode","scopeName","yielder","delayMs","maxTimeMs","started","performance","now","lastYield","Promise","setImmediate","eventLoopYielder","buf","TextBuffer","grammar","grammars","grammarForId","lm","languageModeForGrammarAndBuffer","setLanguageMode","setText","end","getEndPosition","startTokenizing","resolve","fullyTokenized","tree","onDidTokenize","disp","dispose","tokenized","iter","buildHighlightIterator","getOpenScopeIds","getCloseScopeIds","pos","column","seek","res","x","classNameForScopeId","moveToSuccessor","nextPos","getPosition","getTextInRange","destroy","render","markdownText","domPurifyConfig","reject","_lang","then","codeResult","catch","DOMPurify","subscriptions","CompositeDisposable"],"mappings":"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"}