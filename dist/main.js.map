{"version":3,"file":"main.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/marked/src/defaults.js","../node_modules/marked/src/helpers.js","../node_modules/marked/src/Tokenizer.js","../node_modules/marked/src/rules.js","../node_modules/marked/src/Lexer.js","../node_modules/marked/src/Renderer.js","../node_modules/marked/src/TextRenderer.js","../node_modules/marked/src/Slugger.js","../node_modules/marked/src/Parser.js","../node_modules/marked/src/marked.js","../node_modules/dompurify/dist/purify.es.js","../src/main.ts","../src/renderer.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  rtrim,\n  splitCells,\n  escape,\n  findClosingBracket\n} = require('./helpers.js');\n\nfunction outputLink(cap, link, raw) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    return {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text\n    };\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nmodule.exports = class Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src, tokens) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      // An indented code block cannot interrupt a paragraph.\n      if (lastToken && lastToken.type === 'paragraph') {\n        return {\n          raw: cap[0],\n          text: cap[0].trimRight()\n        };\n      }\n\n      const text = cap[0].replace(/^ {4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: cap[2]\n      };\n    }\n  }\n\n  nptable(src) {\n    const cap = this.rules.block.nptable.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n        raw: cap[0]\n      };\n\n      if (item.header.length === item.align.length) {\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  list(src) {\n    const cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw = cap[0];\n      const bull = cap[2];\n      const isordered = bull.length > 1;\n      const isparen = bull[bull.length - 1] === ')';\n\n      const list = {\n        type: 'list',\n        raw,\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      // Get each top-level item.\n      const itemMatch = cap[0].match(this.rules.block.item);\n\n      let next = false,\n        item,\n        space,\n        b,\n        addBack,\n        loose,\n        istask,\n        ischecked;\n\n      const l = itemMatch.length;\n      for (let i = 0; i < l; i++) {\n        item = itemMatch[i];\n        raw = item;\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+[.)]) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = this.rules.block.bullet.exec(itemMatch[i + 1])[0];\n          if (isordered ? b.length === 1 || (!isparen && b[b.length - 1] === ')')\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            addBack = itemMatch.slice(i + 1).join('\\n');\n            list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          list.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: istask,\n          checked: ischecked,\n          loose: loose,\n          text: item\n        });\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      return {\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n      };\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.cells.length;\n        for (i = 0; i < l; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1]\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      };\n    }\n  }\n\n  text(src, tokens) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const lastToken = tokens[tokens.length - 1];\n      if (lastToken && lastToken.type === 'text') {\n        return {\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0]\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src, inLink, inRawBlock) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!inLink && /^<a /i.test(cap[0])) {\n        inLink = true;\n      } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n        inLink = false;\n      }\n      if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = true;\n      } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink,\n        inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n        const linkLen = start + cap[1].length + lastParenIndex;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      const token = outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0]);\n      return token;\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      const token = outputLink(cap, link, cap[0]);\n      return token;\n    }\n  }\n\n  strong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.strong.start.exec(src);\n\n    if (match && (!match[1] || (match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))))) {\n      maskedSrc = maskedSrc.slice(-1 * src.length);\n      const endReg = match[0] === '**' ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;\n\n      endReg.lastIndex = 0;\n\n      let cap;\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        cap = this.rules.inline.strong.middle.exec(maskedSrc.slice(0, match.index + 3));\n        if (cap) {\n          return {\n            type: 'strong',\n            raw: src.slice(0, cap[0].length),\n            text: src.slice(2, cap[0].length - 2)\n          };\n        }\n      }\n    }\n  }\n\n  em(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.em.start.exec(src);\n\n    if (match && (!match[1] || (match[1] && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))))) {\n      maskedSrc = maskedSrc.slice(-1 * src.length);\n      const endReg = match[0] === '*' ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;\n\n      endReg.lastIndex = 0;\n\n      let cap;\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        cap = this.rules.inline.em.middle.exec(maskedSrc.slice(0, match.index + 2));\n        if (cap) {\n          return {\n            type: 'em',\n            raw: src.slice(0, cap[0].length),\n            text: src.slice(1, cap[0].length - 1)\n          };\n        }\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = text.startsWith(' ') && text.endsWith(' ');\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[1]\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, inRawBlock, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  strong: {\n    start: /^(?:(\\*\\*(?=[*punctuation]))|\\*\\*)(?![\\s])|__/, // (1) returns if starts w/ punctuation\n    middle: /^\\*\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*\\*$|^__(?![\\s])((?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?)__$/,\n    endAst: /[^punctuation\\s]\\*\\*(?!\\*)|[punctuation]\\*\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)\n    endUnd: /[^\\s]__(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n  },\n  em: {\n    start: /^(?:(\\*(?=[punctuation]))|\\*)(?![*\\s])|_/, // (1) returns if starts w/ punctuation\n    middle: /^\\*(?:(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)|\\*(?:(?!overlapSkip)(?:[^*]|\\\\\\*)|overlapSkip)*?\\*)+?\\*$|^_(?![_\\s])(?:(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\\\_)|overlapSkip)*?_)+?_$/,\n    endAst: /[^punctuation\\s]\\*(?!\\*)|[punctuation]\\*(?!\\*)(?:(?=[punctuation_\\s]|$))/, // last char can't be punct, or final * must also be followed by punct (or endline)\n    endUnd: /[^\\s]_(?!_)(?:(?=[punctuation*\\s])|$)/ // last char can't be a space, and final _ must preceed punct or \\s (or endline)\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\s*punctuation])/\n};\n\n// list of punctuation marks from common mark spec\n// without * and _ to workaround cases with double emphasis\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline._blockSkip = '\\\\[[^\\\\]]*?\\\\]\\\\([^\\\\)]*?\\\\)|`[^`]*?`|<[^>]*?>';\ninline._overlapSkip = '__[^_]*?__|\\\\*\\\\*\\\\[^\\\\*\\\\]*?\\\\*\\\\*';\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.em.start = edit(inline.em.start)\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.em.middle = edit(inline.em.middle)\n  .replace(/punctuation/g, inline._punctuation)\n  .replace(/overlapSkip/g, inline._overlapSkip)\n  .getRegex();\n\ninline.em.endAst = edit(inline.em.endAst, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.em.endUnd = edit(inline.em.endUnd, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.start = edit(inline.strong.start)\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.middle = edit(inline.strong.middle)\n  .replace(/punctuation/g, inline._punctuation)\n  .replace(/overlapSkip/g, inline._overlapSkip)\n  .getRegex();\n\ninline.strong.endAst = edit(inline.strong.endAst, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.strong.endUnd = edit(inline.strong.endUnd, 'g')\n  .replace(/punctuation/g, inline._punctuation)\n  .getRegex();\n\ninline.blockSkip = edit(inline._blockSkip, 'g')\n  .getRegex();\n\ninline.overlapSkip = edit(inline._overlapSkip, 'g')\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Tokenizer = require('./Tokenizer.js');\nconst { defaults } = require('./defaults.js');\nconst { block, inline } = require('./rules.js');\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens, true);\n\n    this.inline(this.tokens);\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = [], top = true) {\n    src = src.replace(/^ +$/gm, '');\n    let token, i, l, lastToken;\n\n    while (src) {\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src, tokens)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        } else {\n          lastToken = tokens[tokens.length - 1];\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (token = this.tokenizer.nptable(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.blockTokens(token.text, [], top);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        l = token.items.length;\n        for (i = 0; i < l; i++) {\n          token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (top && (token = this.tokenizer.def(src))) {\n        src = src.substring(token.raw.length);\n        if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (token = this.tokenizer.paragraph(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src, tokens)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        } else {\n          lastToken = tokens[tokens.length - 1];\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  inline(tokens) {\n    let i,\n      j,\n      k,\n      l2,\n      row,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'paragraph':\n        case 'text':\n        case 'heading': {\n          token.tokens = [];\n          this.inlineTokens(token.text, token.tokens);\n          break;\n        }\n        case 'table': {\n          token.tokens = {\n            header: [],\n            cells: []\n          };\n\n          // header\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            token.tokens.header[j] = [];\n            this.inlineTokens(token.header[j], token.tokens.header[j]);\n          }\n\n          // cells\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.cells[j];\n            token.tokens.cells[j] = [];\n            for (k = 0; k < row.length; k++) {\n              token.tokens.cells[j][k] = [];\n              this.inlineTokens(row[k], token.tokens.cells[j][k]);\n            }\n          }\n\n          break;\n        }\n        case 'blockquote': {\n          this.inline(token.tokens);\n          break;\n        }\n        case 'list': {\n          l2 = token.items.length;\n          for (j = 0; j < l2; j++) {\n            this.inline(token.items[j].tokens);\n          }\n          break;\n        }\n        default: {\n          // do nothing\n        }\n      }\n    }\n\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = [], inLink = false, inRawBlock = false, prevChar = '') {\n    let token;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    while (src) {\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n        src = src.substring(token.raw.length);\n        inLink = token.inLink;\n        inRawBlock = token.inRawBlock;\n        tokens.push(token);\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        if (token.type === 'link') {\n          token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n        }\n        tokens.push(token);\n        continue;\n      }\n\n      // strong\n      if (token = this.tokenizer.strong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // em\n      if (token = this.tokenizer.em(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n        src = src.substring(token.raw.length);\n        prevChar = token.raw.slice(-1);\n        tokens.push(token);\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n};\n","const Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.tokens.header[j]),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.cells.length;\n          for (j = 0; j < l2; j++) {\n            row = token.tokens.cells[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k]),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Tokenizer = require('./Tokenizer.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(extension) {\n  const opts = merge({}, extension);\n  if (extension.renderer) {\n    const renderer = marked.defaults.renderer || new Renderer();\n    for (const prop in extension.renderer) {\n      const prevRenderer = renderer[prop];\n      renderer[prop] = (...args) => {\n        let ret = extension.renderer[prop].apply(renderer, args);\n        if (ret === false) {\n          ret = prevRenderer.apply(renderer, args);\n        }\n        return ret;\n      };\n    }\n    opts.renderer = renderer;\n  }\n  if (extension.tokenizer) {\n    const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n    for (const prop in extension.tokenizer) {\n      const prevTokenizer = tokenizer[prop];\n      tokenizer[prop] = (...args) => {\n        let ret = extension.tokenizer[prop].apply(tokenizer, args);\n        if (ret === false) {\n          ret = prevTokenizer.apply(tokenizer, args);\n        }\n        return ret;\n      };\n    }\n    opts.tokenizer = tokenizer;\n  }\n  if (extension.walkTokens) {\n    const walkTokens = marked.defaults.walkTokens;\n    opts.walkTokens = (token) => {\n      extension.walkTokens(token);\n      if (walkTokens) {\n        walkTokens(token);\n      }\n    };\n  }\n  marked.setOptions(opts);\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback(token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.tokens.header) {\n          marked.walkTokens(cell, callback);\n        }\n        for (const row of token.tokens.cells) {\n          for (const cell of row) {\n            marked.walkTokens(cell, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.Tokenizer = Tokenizer;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar hasOwnProperty = Object.hasOwnProperty,\n    setPrototypeOf = Object.setPrototypeOf,\n    isFrozen = Object.isFrozen;\nvar freeze = Object.freeze,\n    seal = Object.seal,\n    create = Object.create; // eslint-disable-line import/no-mutable-exports\n\nvar _ref = typeof Reflect !== 'undefined' && Reflect,\n    apply = _ref.apply,\n    construct = _ref.construct;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n  };\n}\n\nvar arrayForEach = unapply(Array.prototype.forEach);\nvar arrayPop = unapply(Array.prototype.pop);\nvar arrayPush = unapply(Array.prototype.push);\n\nvar stringToLowerCase = unapply(String.prototype.toLowerCase);\nvar stringMatch = unapply(String.prototype.match);\nvar stringReplace = unapply(String.prototype.replace);\nvar stringIndexOf = unapply(String.prototype.indexOf);\nvar stringTrim = unapply(String.prototype.trim);\n\nvar regExpTest = unapply(RegExp.prototype.test);\n\nvar typeErrorCreate = unconstruct(TypeError);\n\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n\n/* Add properties to a lookup table */\nfunction addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  var l = array.length;\n  while (l--) {\n    var element = array[l];\n    if (typeof element === 'string') {\n      var lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nfunction clone(object) {\n  var newObject = create(null);\n\n  var property = void 0;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\nvar html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nvar svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\nvar svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\nvar mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\nvar text = freeze(['#text']);\n\nvar html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\nvar svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\nvar mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\nvar xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nvar MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nvar ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nvar DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nvar ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nvar IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nvar IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nvar ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nvar _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n  if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  var suffix = null;\n  var ATTR_NAME = 'data-tt-policy-suffix';\n  if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML: function createHTML(html$$1) {\n        return html$$1;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  var DOMPurify = function DOMPurify(root) {\n    return createDOMPurify(root);\n  };\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '2.1.1';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  var originalDocument = window.document;\n\n  var document = window.document;\n  var DocumentFragment = window.DocumentFragment,\n      HTMLTemplateElement = window.HTMLTemplateElement,\n      Node = window.Node,\n      NodeFilter = window.NodeFilter,\n      _window$NamedNodeMap = window.NamedNodeMap,\n      NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n      Text = window.Text,\n      Comment = window.Comment,\n      DOMParser = window.DOMParser,\n      trustedTypes = window.trustedTypes;\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    var template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n  var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n  var _document = document,\n      implementation = _document.implementation,\n      createNodeIterator = _document.createNodeIterator,\n      getElementsByTagName = _document.getElementsByTagName,\n      createDocumentFragment = _document.createDocumentFragment;\n  var importNode = originalDocument.importNode;\n\n\n  var documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  var hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n  var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n      ERB_EXPR$$1 = ERB_EXPR,\n      DATA_ATTR$$1 = DATA_ATTR,\n      ARIA_ATTR$$1 = ARIA_ATTR,\n      IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n  var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  var ALLOWED_TAGS = null;\n  var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n  /* Allowed attribute names */\n  var ALLOWED_ATTR = null;\n  var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  var FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  var FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  var ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  var ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  var SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  var WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  var SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  var FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  var RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  var RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify. */\n  var RETURN_DOM_IMPORT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  var RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  var SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  var KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  var IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  var USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  var DATA_URI_TAGS = null;\n  var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  var URI_SAFE_ATTRIBUTES = null;\n  var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n  /* Keep a reference to config to pass to hooks */\n  var CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  var formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  var _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html);\n        addToSet(ALLOWED_ATTR, html$1);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl);\n        addToSet(ALLOWED_ATTR, mathMl$1);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  var _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.outerHTML = emptyHTML;\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  var _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name);\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  var _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    var doc = void 0;\n    var leadingWhitespace = void 0;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /* Use the DOMParser API by default, fallback later if needs be */\n    try {\n      doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n    } catch (_) {}\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createHTMLDocument('');\n      var _doc = doc,\n          body = _doc.body;\n\n      body.parentNode.removeChild(body.parentNode.firstElementChild);\n      body.outerHTML = dirtyPayload;\n    }\n\n    if (dirty && leadingWhitespace) {\n      doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  var _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n      return NodeFilter.FILTER_ACCEPT;\n    }, false);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  var _isClobbered = function _isClobbered(elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  var _isNode = function _isNode(object) {\n    return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], function (hook) {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  var _sanitizeElements = function _sanitizeElements(currentNode) {\n    var content = void 0;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    var tagName = stringToLowerCase(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName: tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Take care of an mXSS pattern using p, br inside svg, math */\n    if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br').length !== 0) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[!/\\w]/g, currentNode.innerHTML) && regExpTest(/<[!/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n        try {\n          var htmlToInsert = currentNode.innerHTML;\n          currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n        } catch (_) {}\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove in case a noscript/noembed XSS is suspected */\n    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n      content = stringReplace(content, ERB_EXPR$$1, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    var attr = void 0;\n    var value = void 0;\n    var lcName = void 0;\n    var l = void 0;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    var attributes = currentNode.attributes;\n\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    var hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      var _attr = attr,\n          name = _attr.name,\n          namespaceURI = _attr.namespaceURI;\n\n      value = stringTrim(attr.value);\n      lcName = stringToLowerCase(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n        value = stringReplace(value, ERB_EXPR$$1, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      var lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    var shadowNode = void 0;\n    var shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    var body = void 0;\n    var importedNode = void 0;\n    var currentNode = void 0;\n    var oldNode = void 0;\n    var returnNode = void 0;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    if (!dirty) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) ; else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    var lcTag = stringToLowerCase(tag);\n    var lcName = stringToLowerCase(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport default purify;\n//# sourceMappingURL=purify.es.js.map\n","import { CompositeDisposable } from \"atom\"\nimport { render } from \"./renderer\"\nimport type { MarkdownService } from \"atom-ide-base\"\n\n/**\n * [subscriptions description]\n */\nlet subscriptions: CompositeDisposable | null\n\n/**\n * called by Atom when activating an extension\n */\nexport function activate() {\n  // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n  subscriptions = new CompositeDisposable()\n}\n\n/**\n * called by Atom when deactivating an extension\n */\nexport function deactivate() {\n  if (subscriptions) {\n    subscriptions.dispose()\n  }\n  subscriptions = null\n}\n\n/**\n * provide an interface to the Markdown renderer service\n * @return {MarkdownService} the markdown renderer service\n */\nexport function provideMarkdownRenderer(): MarkdownService {\n  return { render }\n}\n","import { TextEditor } from \"atom\"\nimport marked from \"marked\"\n\n/**\n * safe DOM markup operations\n * a reference to the DOMpurify function to make safe HTML strings\n * @type {DOMPurify}\n */\nimport DOMPurify from \"dompurify\"\n\n/**\n * A function that resolves once the given editor has tokenized\n * @param editor\n */\nexport async function editorTokenized(editor: TextEditor) {\n  return new Promise((resolve) => {\n    const languageMode = editor.getBuffer().getLanguageMode()\n    const nextUpdatePromise = editor.component.getNextUpdatePromise()\n    if (\"fullyTokenized\" in languageMode || \"tree\" in languageMode) {\n      resolve(nextUpdatePromise)\n    } else {\n      const disp = editor.onDidTokenize(() => {\n        disp.dispose()\n        resolve(nextUpdatePromise)\n      })\n    }\n  })\n}\n\n/**\n * Highlights the given code with the given scope name (language)\n * @param code the given code as string\n * @param scopeName the language to highlight the code for\n */\nexport async function highlight(code: string, scopeName: string) {\n  const ed = new TextEditor({\n    readonly: true,\n    keyboardInputEnabled: false,\n    showInvisibles: false,\n    tabLength: atom.config.get(\"editor.tabLength\"),\n  })\n  const el = atom.views.getView(ed)\n  try {\n    el.setUpdatedSynchronously(true)\n    atom.grammars.assignLanguageMode(ed.getBuffer(), scopeName)\n    ed.setText(code)\n    ed.scrollToBufferPosition(ed.getBuffer().getEndPosition())\n    atom.views.getView(atom.workspace).appendChild(el)\n    await editorTokenized(ed)\n    return Array.from(el.querySelectorAll(\".line:not(.dummy)\")).map((x) => x.innerHTML)\n  } finally {\n    el.remove()\n  }\n}\n\nmarked.setOptions({\n  breaks: true,\n})\n\n/**\n * renders markdown to safe HTML asynchronously\n * @param markdownText the markdown text to render\n * @param scopeName scope name used for highlighting the code\n * @return the html string containing the result\n */\nfunction internalRender(markdownText: string, scopeName: string = \"text.plain\"): Promise<string> {\n  return new Promise((resolve, reject) => {\n    marked(\n      markdownText,\n      {\n        highlight: function (code, lang, callback) {\n          highlight(code, scopeName)\n            .then((codeResult) => {\n              callback!(null, codeResult.join(\"\\n\"))\n            })\n            .catch((e) => {\n              callback!(e)\n            })\n        },\n      },\n      (e, html) => {\n        if (e) {\n          reject(e)\n        }\n        // sanitization\n        html = DOMPurify.sanitize(html)\n\n        return resolve(html)\n      }\n    )\n  })\n}\n\n/**\n * renders the markdown text to html\n * @param markdownText the markdown text to render\n * @param grammar the default grammar used in code sections that have no specific grammar set\n * @return the inner HTML text of the rendered section\n */\nexport async function render(markdownText: string, grammar: string): Promise<string> {\n  const html = await internalRender(markdownText, grammar)\n  return html\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","module","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","href","test","rtrim","relativeBase","indexOf","str","c","invert","l","suffLen","currChar","substr","escape","encode","edit","regex","opt","source","obj","name","val","getRegex","RegExp","cleanUrl","prot","decodeURIComponent","encodeURI","noopTest","exec","merge","target","key","i","arguments","Object","prototype","hasOwnProperty","splitCells","tableRow","count","cells","match","offset","escaped","curr","split","splice","trim","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","require","outputLink","cap","link","raw","title","text","type","constructor","options","space","src","rules","block","newline","code","tokens","lastToken","trimRight","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","slice","join","indentCodeCompensation","lang","heading","depth","nptable","item","header","align","hr","blockquote","list","bull","isordered","isparen","ordered","start","loose","items","itemMatch","addBack","istask","ischecked","bullet","undefined","task","checked","pre","def","tag","table","lheading","paragraph","inline","inLink","inRawBlock","lastParenIndex","linkLen","_escapes","reflink","links","nolink","strong","maskedSrc","prevChar","punctuation","endReg","endAst","endUnd","lastIndex","middle","index","em","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","startsWith","endsWith","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","_tag","_comment","normal","reflinkSearch","_punctuation","_blockSkip","_overlapSkip","blockSkip","overlapSkip","_scheme","_email","_attribute","_href","_extended_email","out","charCodeAt","Math","random","toString","Lexer","create","Tokenizer","lex","inlineTokens","blockTokens","top","token","errMsg","error","Error","j","k","l2","row","keys","includes","lastIndexOf","repeat","infostring","quote","slugger","slug","listitem","checkbox","tablerow","content","tablecell","flags","image","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","Renderer","textRenderer","TextRenderer","Slugger","parse","parseInline","l3","cell","itemBody","unshift","marked","callback","err","pending","setTimeout","message","setOptions","use","extension","opts","prop","prevRenderer","args","ret","prevTokenizer","lexInline","parser","lexer","setPrototypeOf","isFrozen","freeze","seal","Reflect","construct","fun","thisValue","x","Func","concat","_toConsumableArray","func","arrayForEach","unapply","Array","forEach","arrayPop","arrayPush","stringToLowerCase","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","_len2","_key2","_len","_key","addToSet","set","array","element","lcElement","clone","object","newObject","property","subscriptions","editorTokenized","editor","languageMode","getBuffer","getLanguageMode","nextUpdatePromise","component","getNextUpdatePromise","disp_1","onDidTokenize","dispose","internalRender","markdownText","scopeName","ed","TextEditor","readonly","keyboardInputEnabled","showInvisibles","tabLength","atom","config","get","el","views","getView","setUpdatedSynchronously","grammars","assignLanguageMode","setText","scrollToBufferPosition","getEndPosition","workspace","appendChild","_a","from","querySelectorAll","innerHTML","remove","codeResult","DOMPurify","render","grammar","CompositeDisposable"],"mappings":"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"}